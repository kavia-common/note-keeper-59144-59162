{"is_source_file": true, "format": "TypeScript", "description": "This file implements a mock in-memory notes API for a frontend application, using localStorage as persistent storage. It provides functions to list, retrieve, create, update, and delete notes, simulating asynchronous behavior with delays.", "external_files": ["./types"], "external_methods": ["crypto.randomUUID"], "published": ["listNotes", "getNote", "createNote", "updateNote", "deleteNote"], "classes": [], "methods": [{"name": "function loadFromStorage(): void { loadFromStorage", "description": "Loads notes data from localStorage into memory on initial load.", "scope": "", "scopeKind": ""}, {"name": "function saveToStorage(): void { saveToStorage", "description": "Persists the current notes array to localStorage.", "scope": "", "scopeKind": ""}, {"name": "export async function listNotes(): Promise<Note[]> { listNotes", "description": "Returns all notes, sorted by last update.", "scope": "", "scopeKind": ""}, {"name": "export async function getNote(id: NoteID): Promise<Note | null> { getNote", "description": "Retrieves a specific note by its ID.", "scope": "", "scopeKind": ""}, {"name": "export async function createNote(input: Pick<Note, \"title\" | \"content\">): Promise<Note> { createNote", "description": "Creates a new note with provided title and content.", "scope": "", "scopeKind": ""}, {"name": "export async function updateNote( updateNote", "description": "Updates an existing note's title and/or content.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteNote(id: NoteID): Promise<boolean> { deleteNote", "description": "Deletes a note by ID.", "scope": "", "scopeKind": ""}, {"name": "function delay(ms = 200) { delay", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["setTimeout", "window.localStorage.getItem", "window.localStorage.setItem", "JSON.parse", "JSON.stringify", "crypto.randomUUID", "Date.prototype.toISOString", "Array.prototype.find", "Array.prototype.findIndex", "Array.prototype.filter", "Array.prototype.slice"], "search-terms": ["mockNotesApi", "localStorage", "notesStore", "storage", "notes_management", "client-side_mock", "InMemoryNotes", "asyncNotes"], "state": 2, "file_id": 13, "knowledge_revision": 27, "git_revision": "", "ctags": [{"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^const STORAGE_KEY = \"notes_frontend_store_v1\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "before", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^  const before = notesStore.length;$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "changed", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^  const changed = notesStore.length !== before;$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^export async function createNote(input: Pick<Note, \"title\" | \"content\">): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "current", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^  const current = notesStore[idx];$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "delay", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^function delay(ms = 200) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^export async function deleteNote(id: NoteID): Promise<boolean> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getNote", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^export async function getNote(id: NoteID): Promise<Note | null> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^  const current = notesStore[idx];$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^  const idx = notesStore.findIndex((n) => n.id === id);$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "listNotes", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^export async function listNotes(): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "loadFromStorage", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^function loadFromStorage(): void {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "n", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^  const n = notesStore.find((x) => x.id === id);$/", "language": "TypeScript", "kind": "constant", "scope": "getNote", "scopeKind": "function"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^  const note: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "notesStore", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^let notesStore: Note[] = [];$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^      const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant", "scope": "loadFromStorage", "scopeKind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^  const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "parsed", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^      const parsed = JSON.parse(raw) as Note[];$/", "language": "TypeScript", "kind": "constant", "scope": "loadFromStorage", "scopeKind": "function"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^    const raw = window.localStorage.getItem(STORAGE_KEY);$/", "language": "TypeScript", "kind": "constant", "scope": "loadFromStorage", "scopeKind": "function"}, {"_type": "tag", "name": "saveToStorage", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^function saveToStorage(): void {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^    title:$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^export async function updateNote($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/note-keeper-59144-59162/notes_frontend/src/lib/mockNotesApi.ts", "pattern": "/^  const updated: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}], "hash": "5f0a08168435de8fbf1d86a600dc86d3", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/lib/mockNotesApi.ts", "fields": [{"name": "let notesStore: Note[] = [];", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"27": ""}]}